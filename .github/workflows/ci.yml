# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  "pull_request": ~
  "push":
    branches:
      - 'main'

name: "CI"

jobs:
  coding-guidelines:
    name: "Coding Guidelines"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Run friendsofphp/php-cs-fixer"
        run: |
          wget https://cs.symfony.com/download/php-cs-fixer-v3.phar -O php-cs-fixer
          php php-cs-fixer fix --dry-run --show-progress=dots --using-cache=no --verbose
  

  type-checker:
    name: "Type Checker"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          tools: composer:2.5.x, php-cs-fixer:3.17.x, psalm:5.12.x

      - name: "Update dependencies with composer"
        run: "composer update --no-ansi --no-interaction --no-progress"

      - name: "Run vimeo/psalm"
        run: "psalm --config=.psalm/config.xml --no-progress --shepherd --show-info=false --stats"

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "8.1"
          - "8.2"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          tools: composer, phpunit:9.5

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "~/.composer/cache"
          key: "php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install dependencies with composer"
        run: "composer update --no-ansi --no-interaction --no-progress"

      - name: "Run tests with phpunit/phpunit"
        run: "phpunit --coverage-clover=coverage.xml"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3